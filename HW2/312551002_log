==7844== Memcheck, a memory error detector
==7844== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==7844== Using Valgrind-3.20.0 and LibVEX; rerun with -h for copyright info
==7844== Command: ./memleak
==7844== Parent PID: 7540
==7844== 
==7844== Invalid write of size 4
==7844==    at 0x1091C0: main (memleak.c:49)
==7844==  Address 0x4a7d068 is 0 bytes after a block of size 40 alloc'd
==7844==    at 0x484684F: malloc (vg_replace_malloc.c:393)
==7844==    by 0x10919E: main (memleak.c:46)
==7844== 
==7844== Invalid read of size 4
==7844==    at 0x1091ED: main (memleak.c:54)
==7844==  Address 0x4a7d068 is 0 bytes after a block of size 40 alloc'd
==7844==    at 0x484684F: malloc (vg_replace_malloc.c:393)
==7844==    by 0x10919E: main (memleak.c:46)
==7844== 
==7844== Conditional jump or move depends on uninitialised value(s)
==7844==    at 0x48D20CB: __printf_buffer (vfprintf-process-arg.c:58)
==7844==    by 0x48D373A: __vfprintf_internal (vfprintf-internal.c:1544)
==7844==    by 0x48C81B2: printf (printf.c:33)
==7844==    by 0x109214: main (memleak.c:57)
==7844== 
==7844== Use of uninitialised value of size 8
==7844==    at 0x48C70BB: _itoa_word (_itoa.c:183)
==7844==    by 0x48D1C9B: __printf_buffer (vfprintf-process-arg.c:155)
==7844==    by 0x48D373A: __vfprintf_internal (vfprintf-internal.c:1544)
==7844==    by 0x48C81B2: printf (printf.c:33)
==7844==    by 0x109214: main (memleak.c:57)
==7844== 
==7844== Conditional jump or move depends on uninitialised value(s)
==7844==    at 0x48C70CC: _itoa_word (_itoa.c:183)
==7844==    by 0x48D1C9B: __printf_buffer (vfprintf-process-arg.c:155)
==7844==    by 0x48D373A: __vfprintf_internal (vfprintf-internal.c:1544)
==7844==    by 0x48C81B2: printf (printf.c:33)
==7844==    by 0x109214: main (memleak.c:57)
==7844== 
==7844== Conditional jump or move depends on uninitialised value(s)
==7844==    at 0x48D1D85: __printf_buffer (vfprintf-process-arg.c:186)
==7844==    by 0x48D373A: __vfprintf_internal (vfprintf-internal.c:1544)
==7844==    by 0x48C81B2: printf (printf.c:33)
==7844==    by 0x109214: main (memleak.c:57)
==7844== 
==7844== Argument 'size' of function malloc has a fishy (possibly negative) value: -40
==7844==    at 0x484684F: malloc (vg_replace_malloc.c:393)
==7844==    by 0x109220: main (memleak.c:61)
==7844== 
==7844== Invalid free() / delete / delete[] / realloc()
==7844==    at 0x48490C4: free (vg_replace_malloc.c:884)
==7844==    by 0x10924A: main (memleak.c:65)
==7844==  Address 0x4a7d4f0 is 0 bytes inside a block of size 40 free'd
==7844==    at 0x48490C4: free (vg_replace_malloc.c:884)
==7844==    by 0x10923E: main (memleak.c:64)
==7844==  Block was alloc'd at
==7844==    at 0x484684F: malloc (vg_replace_malloc.c:393)
==7844==    by 0x10922E: main (memleak.c:63)
==7844== 
==7844== 
==7844== HEAP SUMMARY:
==7844==     in use at exit: 40 bytes in 1 blocks
==7844==   total heap usage: 3 allocs, 3 frees, 1,104 bytes allocated
==7844== 
==7844== 40 bytes in 1 blocks are definitely lost in loss record 1 of 1
==7844==    at 0x484684F: malloc (vg_replace_malloc.c:393)
==7844==    by 0x10919E: main (memleak.c:46)
==7844== 
==7844== LEAK SUMMARY:
==7844==    definitely lost: 40 bytes in 1 blocks
==7844==    indirectly lost: 0 bytes in 0 blocks
==7844==      possibly lost: 0 bytes in 0 blocks
==7844==    still reachable: 0 bytes in 0 blocks
==7844==         suppressed: 0 bytes in 0 blocks
==7844== 
==7844== Use --track-origins=yes to see where uninitialised values come from
==7844== For lists of detected and suppressed errors, rerun with: -s
==7844== ERROR SUMMARY: 9 errors from 9 contexts (suppressed: 0 from 0)
